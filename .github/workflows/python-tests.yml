name: Run unit tests

on:
  pull_request:
  push:
    branches: [ main ]
    tags:
      - '*'
  workflow_dispatch:
  schedule:
    # Run every Tuesday at 03:53 UTC
    - cron: 53 3 * * 2

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        pytest-version:
          - "5.3"  # last version of 5.x series
          - "6.2"  # last version of 6.x series
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "dev"
        include:
          # testing some relatively olv versions with Linux only
          - { os: "ubuntu-20.04", python-version: "3.8", pytest-version: "5.0" }
          - { os: "ubuntu-20.04", python-version: "3.8", pytest-version: "5.1" }
          - { os: "ubuntu-20.04", python-version: "3.8", pytest-version: "5.2" }
          - { os: "ubuntu-20.04", python-version: "3.8", pytest-version: "6.0" }
          - { os: "ubuntu-20.04", python-version: "3.8", pytest-version: "6.1" }
          # some special cases
          - { os: "ubuntu-20.04", python-version: "3.8", pytest-version: "oldest" }
          - { os: "ubuntu-20.04", python-version: "3.12", pytest-version: "dev-numpydev" }

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Tox
      run: python -m pip install tox
    - name: Run Tox
      env:
        PY: ${{ matrix.python-version }}
        PT: ${{ matrix.pytest-version }}
      run: |
        # crete the token as "pyXY-test-pytestXY" from the matrix with drop dots
        toxenv=py"${PY//./}"-test-pytest${PT//./}
        echo $toxenv
        # run the particular tox environment
        tox ${{ matrix.toxargs }} -v -e ${toxenv}
